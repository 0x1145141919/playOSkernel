内核项目按照启动顺序有以下模块：
	1.最基础图形驱动
	1.1轮询阻塞式串口驱动
	1.2基于帧缓冲区的纯cpu图形驱动
	1.3字符位图控制器
	1.4内核shell控制器
	
	2.内存管理
	2.1全局物理内存描述符表 &基础物理内存分配器
	从efi传来的EFI_MEM_DESCRIPTOR复制魔改而来，基于这个数据结构的基础物理内存分配器的外部接口有内核数据区分配/回收（只能在真正的空闲内存管理器没启用时使用），硬件物理地址空间分配声明服务
	2.1.1回收启动时服务内存：
	uefi传过来的内存描述符表需要经过一些处理才能更好的使用
	首先，传过来的表不一定是顺序的，需要按照起始物理地址从小到大排序
	其次，可能会存在物理内存空洞需要填充，而后面的位图分配器初始化的时候默认全部写0,只对使用的内存进行初始化，若存在内存空洞可能被位图页分配器使用，造成未定义行为，因此要补上这个漏洞
	接下来再说回收启动时服务内存，并且复制一份到操作系统数据区，根据规定的内核数据区/代码区/栈区基址标记相应“Loader ”内存为正确的类型
	接下来才能正确地收复loader内存
	然后标记基本内存服务可用
	2.2位图空闲内存管理器
	只管理哪些内存空闲，使用这个分配器的模块要自己记住使用的内存
	类似cpu的n级分页技术，管理器也要根据cpu几级分页使用n级位图
	但是初始化的时候则不然，内存一般按照几千的粒度进行划分，初始化的时候则是先确定粒度，再根据粒度采取主分级m,副分级n-1
	5级页表有4级图（256TB）,3级图（512GB）,2级图（1GB）,1级图（2mb）,0级图
	非0级图一项2bit，代表一个大页的分配状态，四种状态00（空闲），01（有已用），10（有不可分配内存），11（全用），之于01,10要查下面级别表以及物理内存描述表。0级图是一个bit对应一个4kb页
	32GB内存若主分级为2,则2^5块，主分级为1,则2^14块，我们倾向粒度为2^12块，于是选择主分级为1,副分级为0,并且根据全局物理内存描述符表，使用物理内存分配器初始化这两个级别的位图
	2.2.1 Init函数
	这个函数先获取最大物理地址，再为主级别位图/副级别位图分配内存通过基本内存服务，然后根据物理内存描述符表初始化两个级别的位图，以此让分配器可以进入静态模式
	2.2.2 静态页内存分配模式
	在初始化好主级别/副级别内存描述位图后，没有开启内核内存池分配器之前，只能使用静态的物理页内存分配。
	先从固定物理地址内存分配外部接口开始设计，这个接口会按照申请地址向上申请一段连续的内存，因此需要传入起始物理地址，大小（按字节数）
	第一件事是查可否分配，是否空闲，首先根据全局物理内存描述符表查相关地址是否为“freesystemram”,然后再查从上到下根据位图查询是否使用，为了节约相关时间，对于全满，全空的情况不转到下一级位图进行验证
	然后就是跳转到int BitmapFreeMemmgr_t::InnerFixedaddrPgManage(IN phyaddr_t addr, IN uint64_t numofpgs_in4kb,OPERATION Op)
	这个函数参数有地址，要分配多少个连续的4kb页，操作（分配还是回收），
	InnerFixedaddrPgManage这个函数大体思路是先改副级别位图，再根据副级别位图同步到主级别位图，
	再说到默认内存分配器，需要的参数有地址，尺寸（字节大小），采取尽可能减少内存碎片的算法，小的需求优先从小的碎片里面找，大的需求优先起始地址按照主级别页尺寸对齐，然后就是复用内部接口分配内存
	在默认页分配器的基础上根据各种特殊需求，比如分配的基地址对齐要求，大小要求之类的
	释放内存需要原封不动地传回申请时的大小，基地址，同时根据内部接口修改位图相应项，同时也要注意小合并为大
	保留内存用途查询接口，返回类型为类似物理内存描述符的项
	为了应对未来可能的超大内存，要设计专门的内核池（两个主级别位图项）分配接口，内核池元信息（两个副级别）分配接口
	2.2.3 动态页内存分配模式
	2.3内核对象池内存分配器
	在编译的时候就提前定义好一个4mb的堆空间，通过一个类来管，在位图空闲内存管理器进入静态/动态模式后就通过修改其中的flags通知工作模式改变
	构造函数负责初始化first_static_heap,以及设置flags里面的ableto_Expand为false
	2.2.1位图空闲内存管理器的小页完善
	为了兼容后面的超大内存，主分级大于1的时候有些结构需要分配小页，以及高于主分级表的位图，为了简化工作量先暂时强制检验主分级是否为1,不是的话就报错
	2.4.内核空间页表
	根据全局物理内存描述符表另建新的页表系统，低地址段恒等映射物理内存，再将标记为内核数据/代码/栈的内存偏移映射到高128tb
	2.5.虚拟内存分配器
	3.驱动
	3.1.acpi子系统
	3.1.1 apic子系统
	以配置缺页异常中断，除0异常，段异常为目的配置apic子系统顺路再为后面硬件中断做好预留
	3.1.2 pcie子系统
	3.1.2.1 nvme硬盘驱动
	3.1.2.1.1 文件系统驱动
	3.1.2.2 显卡驱动（intel核显）
	3.2ps/2键盘驱动
	4.任务调度器
